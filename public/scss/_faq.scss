// _faq.scss

.faq {
    position: relative;
    margin: 0 auto;

    .container {
        position: relative;
        padding: 20px;
        background: #171717;
        border-radius: 8px;
        margin-bottom: 8px;
        cursor: pointer;

        &:hover {
            filter: brightness(95%);
        }

        .faq-question {
            font-size: map-get($font-size, 'm');
            font-weight: 500;
            display: flex;
            align-items: center;
            justify-content: space-between;

            @include screen-xs {
                font-size: map-get($font-size, 'xs');
            }
        
            @include screen-s {
                font-size: map-get($font-size, 's');
            }
        
            @include screen-m {
                font-size: map-get($font-size, 'm');
            }

            i {
                margin-right: 12px;
                font-size: map-get($font-size, 'm');

                &.active {
                    transform: rotate(90deg);
                }

                @include screen-xs {
                    font-size: map-get($font-size, 'xs');
                }
            
                @include screen-s {
                    font-size: map-get($font-size, 's');
                }
            
                @include screen-m {
                    font-size: map-get($font-size, 'm');
                }
            }
        }

        .faq-response {
            position: relative;
            font-size: map-get($font-size, 's');
            margin-top: 18px;
            display: none;

            &.active {
                display: block;
            }
        }
    }
}

body {
    &[data-theme="light"] {
        .faq {
            .container {
                background: map-get($colors, _lightgray);
        
                &::before {
                    background: map-get($colors, _gray);
                }
            }
        }
    }

    &[data-theme="dark"] {
        .faq {
            .container {
                background: map-get($colors, _lightblack);
        
                &::before {
                    background: map-get($colors, _lightblack3);
                }
            }
        }
    }
}